// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id             Int             @id @default(autoincrement())
  user_id        String
  posts          Post[]
  Comment        Comment[]
  temporaryPosts TemporaryPost[]
  Story          Story[]
}

model Post {
  id       Int       @id @default(autoincrement())
  author   Profile   @relation(fields: [authorId], references: [id])
  authorId Int
  images   Image[]
  tags     Tag[]
  likes_count Int    @default(0)
  body     String
  views    Int       @default(0)
  created  DateTime  @default(now())
  updated  DateTime  @updatedAt
  Comment  Comment[]

  @@index([authorId])
}

model Image {
  id     Int    @id @default(autoincrement())
  postId Int
  post   Post   @relation(fields: [postId], references: [id])
  url    String

  @@index([postId])
}

model Tag {
  id     Int    @id @default(autoincrement())
  postId Int
  post   Post[]
  body   String

  @@index([postId])
}

model Comment {
  id              Int     @id @default(autoincrement())
  content         String
  owner           Profile @relation(fields: [ownerId], references: [id])
  ownerId         Int
  post            Post    @relation(fields: [postId], references: [id])
  postId          Int
  temporaryPostId Int?

  @@index([ownerId])
  @@index([postId])
}

model TemporaryPost {
  id       Int      @id @default(autoincrement())
  author   Profile  @relation(fields: [authorId], references: [id])
  authorId Int
  created  DateTime @default(now())
  updated  DateTime @updatedAt

  @@index([authorId])
}

model Story {
  id       Int      @id @default(autoincrement())
  author   Profile  @relation(fields: [authorId], references: [id])
  authorId Int
  imageUrl String
  created  DateTime @default(now())
  updated  DateTime @updatedAt

  @@index([authorId])
}
